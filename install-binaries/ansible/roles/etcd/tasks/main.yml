- name: Get etcd binary files
  unarchive:
    src: http://192.168.1.6:8888/etcd-v3.5.0-linux-amd64.tar.gz
    dest: /tmp
    remote_src: yes

- name: Copy etcd tools to /usr/local/bin
  become: true
  copy:
    src: "/tmp/etcd-v3.5.0-linux-amd64/{{ item }}"
    dest: "/usr/local/bin/"
    mode: ugo+x
    remote_src: yes
  with_items: [etcd, etcdctl, etcdutl]

# - name: Copy etcd tools to /usr/local/bin
#   command: "{{ item }}"
#   with_items:
#     - etcd --version
#     - etcdctl version
#     - etcdutl version

- name: Get cfssl binary files
  become: true
  get_url:
    url: http://192.168.1.6:8888/{{ item.url }}
    dest: /usr/local/bin/{{ item.target }}
    mode: '0755'
  with_items:
    - { "url": "cfssl_1.6.0_linux_amd64", "target": "cfssl" }
    - { "url": "cfssljson_1.6.0_linux_amd64", "target": "cfssljson" }
    - { "url": "cfssl-certinfo_1.6.0_linux_amd64", "target": "cfssl-certinfo" }
    - { "url": "cfssl-newkey_1.6.0_linux_amd64", "target": "cfssl-newkey" }
    - { "url": "cfssl-scan_1.6.0_linux_amd64", "target": "cfssl-scan" }
  delegate_to: localhost

- name: ensure directory /tmp/etcd/ssl exists
  file:
    path: /tmp/etcd/ssl
    state: directory
  delegate_to: localhost

- name: Copy ca-csr.json, ca-config.json, etcd-csr.json to /tmp/etcd/ssl
  template:
    src: "templates/{{ item }}"
    dest: /tmp/etcd/ssl/
  with_items:
    - ca-csr.json
    - ca-config.json
    - etcd-csr.json
  delegate_to: localhost

# cfssl gencert -initca ca-csr.json | cfssljson -bare ca
# cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=k8s-etcd etcd-csr.json | cfssljson -bare etcd
- name: generate ca.csr, ca-key.pem, ca.pem, etcd.csr, etcd-key.pem, etcd.pem
  shell: |
    cfssl gencert -initca ca-csr.json | cfssljson -bare ca
    cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=k8s-etcd etcd-csr.json | cfssljson -bare etcd
  args:
    chdir: /tmp/etcd/ssl
    creates: /tmp/etcd/ssl/*.pem
  delegate_to: localhost

- name: ensure directory /etc/etcd/ssl exists
  become: true
  file:
    path: /etc/etcd/ssl
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: copy ssl etcd-01 to etcd-02 and ectd-03
  become: true
  copy:
    src: "/tmp/etcd/ssl/{{ item }}"
    dest: "/etc/etcd/ssl/{{ item }}"
    owner: root
    group: root
    mode: ugo+r,go-w
  with_items: ["ca.csr", "ca-key.pem", "ca.pem", "etcd.csr", "etcd-key.pem", "etcd.pem"]


- name: copy config to /etc/etcd/etcd.conf
  become: true
  template:
    src: templates/etcd.j2
    dest: /etc/etcd/etcd.conf

- name: Copy etcd.service to /usr/lib/systemd/system/
  become: true
  template:
    src: templates/etcd.service
    dest: /usr/lib/systemd/system/

- name: ensure data dir
  become: true
  file:
    path: "{{ etcd_data_dir }}"
    state: directory
    mode: '0755'

- name: Enable service etcd and ensure it is not masked
  become: true
  ansible.builtin.systemd:
    name: etcd
    enabled: yes
    masked: no

- name: Just force systemd to reread configs
  become: true
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Make sure etcd service is running
  become: true
  ansible.builtin.systemd:
    name: etcd
    state: started