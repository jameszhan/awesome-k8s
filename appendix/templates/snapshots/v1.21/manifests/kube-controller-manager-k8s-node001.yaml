apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubernetes.io/config.hash: 98774f3bfb2642ad08da318bf984c92b
    kubernetes.io/config.mirror: 98774f3bfb2642ad08da318bf984c92b
    kubernetes.io/config.seen: "2021-05-04T03:35:20.536299336+08:00"
    kubernetes.io/config.source: file
  creationTimestamp: "2021-05-03T19:36:23Z"
  labels:
    component: kube-controller-manager
    tier: control-plane
  name: kube-controller-manager-k8s-node001
  namespace: kube-system
  ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: k8s-node001
      uid: 2844247b-8277-4e75-98b8-7eac13ee2538
  resourceVersion: "28593067"
  uid: 02870758-2671-4ab9-ac1f-eac9cc81ab2c
spec:
  containers:
    - command:
        - kube-controller-manager
        - --allocate-node-cidrs=true
        - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
        - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf
        - --bind-address=127.0.0.1
        - --client-ca-file=/etc/kubernetes/pki/ca.crt
        - --cluster-cidr=10.244.0.0/16
        - --cluster-name=kubernetes
        - --cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt
        - --cluster-signing-key-file=/etc/kubernetes/pki/ca.key
        - --controllers=*,bootstrapsigner,tokencleaner
        - --kubeconfig=/etc/kubernetes/controller-manager.conf
        - --leader-elect=true
        - --port=0
        - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
        - --root-ca-file=/etc/kubernetes/pki/ca.crt
        - --service-account-private-key-file=/etc/kubernetes/pki/sa.key
        - --service-cluster-ip-range=10.96.0.0/12
        - --use-service-account-credentials=true
      image: k8s.gcr.io/kube-controller-manager:v1.21.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-controller-manager
      resources:
        requests:
          cpu: 200m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /etc/ssl/certs
          name: ca-certs
          readOnly: true
        - mountPath: /etc/ca-certificates
          name: etc-ca-certificates
          readOnly: true
        - mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
          name: flexvolume-dir
        - mountPath: /etc/kubernetes/pki
          name: k8s-certs
          readOnly: true
        - mountPath: /etc/kubernetes/controller-manager.conf
          name: kubeconfig
          readOnly: true
        - mountPath: /usr/local/share/ca-certificates
          name: usr-local-share-ca-certificates
          readOnly: true
        - mountPath: /usr/share/ca-certificates
          name: usr-share-ca-certificates
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostNetwork: true
  nodeName: k8s-node001
  preemptionPolicy: PreemptLowerPriority
  priority: 2000001000
  priorityClassName: system-node-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      operator: Exists
  volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        type: DirectoryOrCreate
      name: flexvolume-dir
    - hostPath:
        path: /etc/kubernetes/pki
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /etc/kubernetes/controller-manager.conf
        type: FileOrCreate
      name: kubeconfig
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-09-19T18:05:46Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-09-19T18:05:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-09-19T18:05:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-09-19T18:05:46Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - containerID: docker://180f3b2635ef9823ce2f832519dbd7c3d53c4e93a7acafd71d02cb8e1537f726
      image: k8s.gcr.io/kube-controller-manager:v1.21.0
      imageID: docker-pullable://registry.cn-hangzhou.aliyuncs.com/google_containers/kube-controller-manager@sha256:92414283b8a8ba52ad04691a7124aea042e3f2ec3f6384efc5b08da3e100442d
      lastState:
        terminated:
          containerID: docker://b29b3d145e11cab2b012d6255b8d2ee84414b7dbf0e584ecde95a326c6be972f
          exitCode: 2
          finishedAt: "2021-09-10T16:30:55Z"
          reason: Error
          startedAt: "2021-09-04T14:57:31Z"
      name: kube-controller-manager
      ready: true
      restartCount: 18
      started: true
      state:
        running:
          startedAt: "2021-09-10T18:07:43Z"
  hostIP: 192.168.1.161
  phase: Running
  podIP: 192.168.1.161
  podIPs:
    - ip: 192.168.1.161
  qosClass: Burstable
  startTime: "2021-09-19T18:05:46Z"